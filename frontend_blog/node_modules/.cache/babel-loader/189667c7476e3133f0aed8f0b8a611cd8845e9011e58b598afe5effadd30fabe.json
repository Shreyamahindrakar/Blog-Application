{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shreya M\\\\Desktop\\\\demo\\\\blog\\\\BlogAPplication\\\\frontend_blog\\\\src\\\\components\\\\singlePost\\\\SinglePost.js\",\n  _s = $RefreshSig$();\n// Inside SinglePost.js\nimport { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../config/config\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the post ID from the URL\n  const [post, setPost] = useState(null); // State to store the post data\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(null); // State to manage errors\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        // Fetch the post using the id from the API\n        const response = await axios.get(`${config.API_BASE_URL}/api/blogapi/get-post-list/?posts_id=${id}`);\n        const postData = response.data.data[0];\n        setPost(postData); // Set the post data\n      } catch (error) {\n        setError(\"Failed to fetch post\");\n        console.error(\"Failed to fetch post:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPost();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: `${config.API_BASE_URL}${post.image}` // Prepend the base URL to the image path\n        ,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/update-post/${post.id}`,\n            className: \"singlePostIcon far fa-edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link\",\n              to: `/posts?username=${post.author || \"Unknown\"}`,\n              children: post.author || \"Unknown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.created_at).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"HEuJ3XdoldksiV2n+Mg4TLBg8uY=\", false, function () {\n  return [useParams];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["Link","useParams","useEffect","useState","axios","config","jsxDEV","_jsxDEV","SinglePost","_s","id","post","setPost","loading","setLoading","error","setError","fetchPost","response","get","API_BASE_URL","postData","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","alt","title","to","author","Date","created_at","toDateString","content","_c","$RefreshReg$"],"sources":["C:/Users/Shreya M/Desktop/demo/blog/BlogAPplication/frontend_blog/src/components/singlePost/SinglePost.js"],"sourcesContent":["// Inside SinglePost.js\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config\";\r\nimport \"./singlePost.css\";\r\n\r\nexport default function SinglePost() {\r\n  const { id } = useParams(); // Get the post ID from the URL\r\n  const [post, setPost] = useState(null); // State to store the post data\r\n  const [loading, setLoading] = useState(true); // State to manage loading status\r\n  const [error, setError] = useState(null); // State to manage errors\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        // Fetch the post using the id from the API\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/blogapi/get-post-list/?posts_id=${id}`);\r\n        const postData = response.data.data[0];\r\n        setPost(postData); // Set the post data\r\n      } catch (error) {\r\n        setError(\"Failed to fetch post\");\r\n        console.error(\"Failed to fetch post:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      <div className=\"singlePostWrapper\">\r\n        <img\r\n          className=\"singlePostImg\"\r\n          src={`${config.API_BASE_URL}${post.image}`} // Prepend the base URL to the image path\r\n          alt={post.title}\r\n        />\r\n        <h1 className=\"singlePostTitle\">\r\n          {post.title}\r\n          <div className=\"singlePostEdit\">\r\n          <Link to={`/update-post/${post.id}`} className=\"singlePostIcon far fa-edit\">\r\n            Edit\r\n          </Link>\r\n\r\n            <i className=\"singlePostIcon far fa-trash-alt\"></i>\r\n          </div>\r\n        </h1>\r\n        <div className=\"singlePostInfo\">\r\n          <span>\r\n            Author:\r\n            <b className=\"singlePostAuthor\">\r\n              <Link className=\"link\" to={`/posts?username=${post.author || \"Unknown\"}`}>\r\n                {post.author || \"Unknown\"}\r\n              </Link>\r\n            </b>\r\n          </span>\r\n          <span>{new Date(post.created_at).toDateString()}</span>\r\n        </div>\r\n        <p className=\"singlePostDesc\">\r\n          {post.content}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}